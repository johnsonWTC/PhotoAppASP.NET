@model IEnumerable<PhotoApp.Models.Photo>

@{
    ViewData["Title"] = "My photos";
    ViewData["user"] = "_userId";
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
    var userId = claimsIdentity.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier).Value.ToString();
}

<h1>My photos</h1>

<p>
    <a asp-action="Create">Add Photo</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProfilePicture)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ApplicationUser.Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>


                    <img class="gallery-image" src="~/images/@item.ProfilePicture"
                         asp-append-version="true" />
                    @*to only display edit delete and likes when you own the photo*@





                    @if (item.ApplicationUser != null)
                    {
                        @foreach (var like in item.Likes)
                        {
                            if (like.PhotoLiker == item.Id)
                            {
                                <a asp-action="UnLike" asp-controller="Photos" asp-route-id="@item.PhotoId" asp-route-photoOwner="@item.Id">
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.PhotoId">Delete</a>
                                <a asp-action="Like" asp-controller="Photos" asp-route-id="@item.PhotoId" asp-route-photoOwner="@item.Id">
                                    Like
                                </a>

                            }
                            else
                            {
                                <div class="image-details">
                                    <a>@item.Likes.Count Likes </a>|
                                    <a asp-action="Edit" asp-route-id="@item.PhotoId">Edit</a> |
                                    <a asp-action="Delete" asp-route-id="@item.PhotoId">Delete</a>
                                    <a asp-action="Like" asp-controller="Photos" asp-route-id="@item.PhotoId" asp-route-photoOwner="@item.Id">
                                        Like
                                    </a>
                                </div>

                            }
                        }

                        <div class="image-details">
                            <a>@item.Likes.Count Likes </a>|
                            <a asp-action="Edit" asp-route-id="@item.PhotoId">Edit</a> |
                            <a asp-action="Delete" asp-route-id="@item.PhotoId">Delete</a>
                            <a asp-action="Like" asp-controller="Photos" asp-route-id="@item.PhotoId" asp-route-photoOwner="@item.Id">
                                Like
                            </a>
                        </div>
                    }
                    else
                    {
                        @foreach (var like in item.Likes)
                        {
                            if (like.PhotoLiker == item.Id)
                            {
                                <a asp-action="UnLike" asp-controller="Photos" asp-route-id="@item.PhotoId" asp-route-photoOwner="@item.Id">
                                </a>
                            }
                        }
                    }

                    @*@if (item.ApplicationUser != null && item)
        {

        }

        else
        {
            <a asp-action="Like" asp-controller="Photos" asp-route-id="@item.PhotoId" asp-route-photoOwner="@item.Id">
               Like
            </a>

            <a asp-action="Likes" asp-route-id="@item.PhotoId">@item.Likes.Count Likes</a>
        }*@

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
                </td>

            </tr>
        }
    </tbody>
</table>
